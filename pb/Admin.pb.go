//*
// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: Admin.proto

// This file contains protocol buffers that are used for Admin service.

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetRegionInfoResponse_CompactionState int32

const (
	GetRegionInfoResponse_NONE            GetRegionInfoResponse_CompactionState = 0
	GetRegionInfoResponse_MINOR           GetRegionInfoResponse_CompactionState = 1
	GetRegionInfoResponse_MAJOR           GetRegionInfoResponse_CompactionState = 2
	GetRegionInfoResponse_MAJOR_AND_MINOR GetRegionInfoResponse_CompactionState = 3
)

// Enum value maps for GetRegionInfoResponse_CompactionState.
var (
	GetRegionInfoResponse_CompactionState_name = map[int32]string{
		0: "NONE",
		1: "MINOR",
		2: "MAJOR",
		3: "MAJOR_AND_MINOR",
	}
	GetRegionInfoResponse_CompactionState_value = map[string]int32{
		"NONE":            0,
		"MINOR":           1,
		"MAJOR":           2,
		"MAJOR_AND_MINOR": 3,
	}
)

func (x GetRegionInfoResponse_CompactionState) Enum() *GetRegionInfoResponse_CompactionState {
	p := new(GetRegionInfoResponse_CompactionState)
	*p = x
	return p
}

func (x GetRegionInfoResponse_CompactionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetRegionInfoResponse_CompactionState) Descriptor() protoreflect.EnumDescriptor {
	return file_Admin_proto_enumTypes[0].Descriptor()
}

func (GetRegionInfoResponse_CompactionState) Type() protoreflect.EnumType {
	return &file_Admin_proto_enumTypes[0]
}

func (x GetRegionInfoResponse_CompactionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetRegionInfoResponse_CompactionState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetRegionInfoResponse_CompactionState(num)
	return nil
}

// Deprecated: Use GetRegionInfoResponse_CompactionState.Descriptor instead.
func (GetRegionInfoResponse_CompactionState) EnumDescriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{1, 0}
}

type OpenRegionResponse_RegionOpeningState int32

const (
	OpenRegionResponse_OPENED         OpenRegionResponse_RegionOpeningState = 0
	OpenRegionResponse_ALREADY_OPENED OpenRegionResponse_RegionOpeningState = 1
	OpenRegionResponse_FAILED_OPENING OpenRegionResponse_RegionOpeningState = 2
)

// Enum value maps for OpenRegionResponse_RegionOpeningState.
var (
	OpenRegionResponse_RegionOpeningState_name = map[int32]string{
		0: "OPENED",
		1: "ALREADY_OPENED",
		2: "FAILED_OPENING",
	}
	OpenRegionResponse_RegionOpeningState_value = map[string]int32{
		"OPENED":         0,
		"ALREADY_OPENED": 1,
		"FAILED_OPENING": 2,
	}
)

func (x OpenRegionResponse_RegionOpeningState) Enum() *OpenRegionResponse_RegionOpeningState {
	p := new(OpenRegionResponse_RegionOpeningState)
	*p = x
	return p
}

func (x OpenRegionResponse_RegionOpeningState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OpenRegionResponse_RegionOpeningState) Descriptor() protoreflect.EnumDescriptor {
	return file_Admin_proto_enumTypes[1].Descriptor()
}

func (OpenRegionResponse_RegionOpeningState) Type() protoreflect.EnumType {
	return &file_Admin_proto_enumTypes[1]
}

func (x OpenRegionResponse_RegionOpeningState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *OpenRegionResponse_RegionOpeningState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = OpenRegionResponse_RegionOpeningState(num)
	return nil
}

// Deprecated: Use OpenRegionResponse_RegionOpeningState.Descriptor instead.
func (OpenRegionResponse_RegionOpeningState) EnumDescriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{7, 0}
}

type SlowLogResponseRequest_FilterByOperator int32

const (
	SlowLogResponseRequest_AND SlowLogResponseRequest_FilterByOperator = 0
	SlowLogResponseRequest_OR  SlowLogResponseRequest_FilterByOperator = 1
)

// Enum value maps for SlowLogResponseRequest_FilterByOperator.
var (
	SlowLogResponseRequest_FilterByOperator_name = map[int32]string{
		0: "AND",
		1: "OR",
	}
	SlowLogResponseRequest_FilterByOperator_value = map[string]int32{
		"AND": 0,
		"OR":  1,
	}
)

func (x SlowLogResponseRequest_FilterByOperator) Enum() *SlowLogResponseRequest_FilterByOperator {
	p := new(SlowLogResponseRequest_FilterByOperator)
	*p = x
	return p
}

func (x SlowLogResponseRequest_FilterByOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlowLogResponseRequest_FilterByOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_Admin_proto_enumTypes[2].Descriptor()
}

func (SlowLogResponseRequest_FilterByOperator) Type() protoreflect.EnumType {
	return &file_Admin_proto_enumTypes[2]
}

func (x SlowLogResponseRequest_FilterByOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SlowLogResponseRequest_FilterByOperator) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SlowLogResponseRequest_FilterByOperator(num)
	return nil
}

// Deprecated: Use SlowLogResponseRequest_FilterByOperator.Descriptor instead.
func (SlowLogResponseRequest_FilterByOperator) EnumDescriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{41, 0}
}

type SlowLogResponseRequest_LogType int32

const (
	SlowLogResponseRequest_SLOW_LOG  SlowLogResponseRequest_LogType = 0
	SlowLogResponseRequest_LARGE_LOG SlowLogResponseRequest_LogType = 1
)

// Enum value maps for SlowLogResponseRequest_LogType.
var (
	SlowLogResponseRequest_LogType_name = map[int32]string{
		0: "SLOW_LOG",
		1: "LARGE_LOG",
	}
	SlowLogResponseRequest_LogType_value = map[string]int32{
		"SLOW_LOG":  0,
		"LARGE_LOG": 1,
	}
)

func (x SlowLogResponseRequest_LogType) Enum() *SlowLogResponseRequest_LogType {
	p := new(SlowLogResponseRequest_LogType)
	*p = x
	return p
}

func (x SlowLogResponseRequest_LogType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SlowLogResponseRequest_LogType) Descriptor() protoreflect.EnumDescriptor {
	return file_Admin_proto_enumTypes[3].Descriptor()
}

func (SlowLogResponseRequest_LogType) Type() protoreflect.EnumType {
	return &file_Admin_proto_enumTypes[3]
}

func (x SlowLogResponseRequest_LogType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SlowLogResponseRequest_LogType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SlowLogResponseRequest_LogType(num)
	return nil
}

// Deprecated: Use SlowLogResponseRequest_LogType.Descriptor instead.
func (SlowLogResponseRequest_LogType) EnumDescriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{41, 1}
}

type GetRegionInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region          *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	CompactionState *bool            `protobuf:"varint,2,opt,name=compaction_state,json=compactionState" json:"compaction_state,omitempty"`
	BestSplitRow    *bool            `protobuf:"varint,3,opt,name=best_split_row,json=bestSplitRow" json:"best_split_row,omitempty"`
}

func (x *GetRegionInfoRequest) Reset() {
	*x = GetRegionInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionInfoRequest) ProtoMessage() {}

func (x *GetRegionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetRegionInfoRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{0}
}

func (x *GetRegionInfoRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *GetRegionInfoRequest) GetCompactionState() bool {
	if x != nil && x.CompactionState != nil {
		return *x.CompactionState
	}
	return false
}

func (x *GetRegionInfoRequest) GetBestSplitRow() bool {
	if x != nil && x.BestSplitRow != nil {
		return *x.BestSplitRow
	}
	return false
}

type GetRegionInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfo      *RegionInfo                            `protobuf:"bytes,1,req,name=region_info,json=regionInfo" json:"region_info,omitempty"`
	CompactionState *GetRegionInfoResponse_CompactionState `protobuf:"varint,2,opt,name=compaction_state,json=compactionState,enum=pb.GetRegionInfoResponse_CompactionState" json:"compaction_state,omitempty"`
	// optional bool DEPRECATED_isRecovering = 3;
	// True if region is splittable, false otherwise.
	Splittable *bool `protobuf:"varint,4,opt,name=splittable" json:"splittable,omitempty"`
	// True if region is mergeable, false otherwise.
	Mergeable *bool `protobuf:"varint,5,opt,name=mergeable" json:"mergeable,omitempty"`
	// Get bestSplitRow
	BestSplitRow []byte `protobuf:"bytes,6,opt,name=best_split_row,json=bestSplitRow" json:"best_split_row,omitempty"`
}

func (x *GetRegionInfoResponse) Reset() {
	*x = GetRegionInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionInfoResponse) ProtoMessage() {}

func (x *GetRegionInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionInfoResponse.ProtoReflect.Descriptor instead.
func (*GetRegionInfoResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetRegionInfoResponse) GetRegionInfo() *RegionInfo {
	if x != nil {
		return x.RegionInfo
	}
	return nil
}

func (x *GetRegionInfoResponse) GetCompactionState() GetRegionInfoResponse_CompactionState {
	if x != nil && x.CompactionState != nil {
		return *x.CompactionState
	}
	return GetRegionInfoResponse_NONE
}

func (x *GetRegionInfoResponse) GetSplittable() bool {
	if x != nil && x.Splittable != nil {
		return *x.Splittable
	}
	return false
}

func (x *GetRegionInfoResponse) GetMergeable() bool {
	if x != nil && x.Mergeable != nil {
		return *x.Mergeable
	}
	return false
}

func (x *GetRegionInfoResponse) GetBestSplitRow() []byte {
	if x != nil {
		return x.BestSplitRow
	}
	return nil
}

//*
// Get a list of store files for a set of column families in a particular region.
// If no column family is specified, get the store files for all column families.
type GetStoreFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Family [][]byte         `protobuf:"bytes,2,rep,name=family" json:"family,omitempty"`
}

func (x *GetStoreFileRequest) Reset() {
	*x = GetStoreFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreFileRequest) ProtoMessage() {}

func (x *GetStoreFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreFileRequest.ProtoReflect.Descriptor instead.
func (*GetStoreFileRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetStoreFileRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *GetStoreFileRequest) GetFamily() [][]byte {
	if x != nil {
		return x.Family
	}
	return nil
}

type GetStoreFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreFile []string `protobuf:"bytes,1,rep,name=store_file,json=storeFile" json:"store_file,omitempty"`
}

func (x *GetStoreFileResponse) Reset() {
	*x = GetStoreFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStoreFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStoreFileResponse) ProtoMessage() {}

func (x *GetStoreFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStoreFileResponse.ProtoReflect.Descriptor instead.
func (*GetStoreFileResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetStoreFileResponse) GetStoreFile() []string {
	if x != nil {
		return x.StoreFile
	}
	return nil
}

type GetOnlineRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOnlineRegionRequest) Reset() {
	*x = GetOnlineRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineRegionRequest) ProtoMessage() {}

func (x *GetOnlineRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineRegionRequest.ProtoReflect.Descriptor instead.
func (*GetOnlineRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{4}
}

type GetOnlineRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfo []*RegionInfo `protobuf:"bytes,1,rep,name=region_info,json=regionInfo" json:"region_info,omitempty"`
}

func (x *GetOnlineRegionResponse) Reset() {
	*x = GetOnlineRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOnlineRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOnlineRegionResponse) ProtoMessage() {}

func (x *GetOnlineRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOnlineRegionResponse.ProtoReflect.Descriptor instead.
func (*GetOnlineRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetOnlineRegionResponse) GetRegionInfo() []*RegionInfo {
	if x != nil {
		return x.RegionInfo
	}
	return nil
}

type OpenRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenInfo []*OpenRegionRequest_RegionOpenInfo `protobuf:"bytes,1,rep,name=open_info,json=openInfo" json:"open_info,omitempty"`
	// the intended server for this RPC.
	ServerStartCode *uint64 `protobuf:"varint,2,opt,name=serverStartCode" json:"serverStartCode,omitempty"`
	// wall clock time from master
	MasterSystemTime *uint64 `protobuf:"varint,5,opt,name=master_system_time,json=masterSystemTime" json:"master_system_time,omitempty"`
}

func (x *OpenRegionRequest) Reset() {
	*x = OpenRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRegionRequest) ProtoMessage() {}

func (x *OpenRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRegionRequest.ProtoReflect.Descriptor instead.
func (*OpenRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{6}
}

func (x *OpenRegionRequest) GetOpenInfo() []*OpenRegionRequest_RegionOpenInfo {
	if x != nil {
		return x.OpenInfo
	}
	return nil
}

func (x *OpenRegionRequest) GetServerStartCode() uint64 {
	if x != nil && x.ServerStartCode != nil {
		return *x.ServerStartCode
	}
	return 0
}

func (x *OpenRegionRequest) GetMasterSystemTime() uint64 {
	if x != nil && x.MasterSystemTime != nil {
		return *x.MasterSystemTime
	}
	return 0
}

type OpenRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpeningState []OpenRegionResponse_RegionOpeningState `protobuf:"varint,1,rep,name=opening_state,json=openingState,enum=pb.OpenRegionResponse_RegionOpeningState" json:"opening_state,omitempty"`
}

func (x *OpenRegionResponse) Reset() {
	*x = OpenRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRegionResponse) ProtoMessage() {}

func (x *OpenRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRegionResponse.ProtoReflect.Descriptor instead.
func (*OpenRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{7}
}

func (x *OpenRegionResponse) GetOpeningState() []OpenRegionResponse_RegionOpeningState {
	if x != nil {
		return x.OpeningState
	}
	return nil
}

type WarmupRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionInfo *RegionInfo `protobuf:"bytes,1,req,name=regionInfo" json:"regionInfo,omitempty"`
}

func (x *WarmupRegionRequest) Reset() {
	*x = WarmupRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarmupRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarmupRegionRequest) ProtoMessage() {}

func (x *WarmupRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarmupRegionRequest.ProtoReflect.Descriptor instead.
func (*WarmupRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{8}
}

func (x *WarmupRegionRequest) GetRegionInfo() *RegionInfo {
	if x != nil {
		return x.RegionInfo
	}
	return nil
}

type WarmupRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WarmupRegionResponse) Reset() {
	*x = WarmupRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarmupRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarmupRegionResponse) ProtoMessage() {}

func (x *WarmupRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarmupRegionResponse.ProtoReflect.Descriptor instead.
func (*WarmupRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{9}
}

//*
// Closes the specified region and will use or not use ZK during the close
// according to the specified flag.
type CloseRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region               *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	VersionOfClosingNode *uint32          `protobuf:"varint,2,opt,name=version_of_closing_node,json=versionOfClosingNode" json:"version_of_closing_node,omitempty"`
	TransitionIn_ZK      *bool            `protobuf:"varint,3,opt,name=transition_in_ZK,json=transitionInZK,def=1" json:"transition_in_ZK,omitempty"`
	DestinationServer    *ServerName      `protobuf:"bytes,4,opt,name=destination_server,json=destinationServer" json:"destination_server,omitempty"`
	// the intended server for this RPC.
	ServerStartCode *uint64 `protobuf:"varint,5,opt,name=serverStartCode" json:"serverStartCode,omitempty"`
	CloseProcId     *int64  `protobuf:"varint,6,opt,name=close_proc_id,json=closeProcId,def=-1" json:"close_proc_id,omitempty"`
}

// Default values for CloseRegionRequest fields.
const (
	Default_CloseRegionRequest_TransitionIn_ZK = bool(true)
	Default_CloseRegionRequest_CloseProcId     = int64(-1)
)

func (x *CloseRegionRequest) Reset() {
	*x = CloseRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRegionRequest) ProtoMessage() {}

func (x *CloseRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRegionRequest.ProtoReflect.Descriptor instead.
func (*CloseRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{10}
}

func (x *CloseRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *CloseRegionRequest) GetVersionOfClosingNode() uint32 {
	if x != nil && x.VersionOfClosingNode != nil {
		return *x.VersionOfClosingNode
	}
	return 0
}

func (x *CloseRegionRequest) GetTransitionIn_ZK() bool {
	if x != nil && x.TransitionIn_ZK != nil {
		return *x.TransitionIn_ZK
	}
	return Default_CloseRegionRequest_TransitionIn_ZK
}

func (x *CloseRegionRequest) GetDestinationServer() *ServerName {
	if x != nil {
		return x.DestinationServer
	}
	return nil
}

func (x *CloseRegionRequest) GetServerStartCode() uint64 {
	if x != nil && x.ServerStartCode != nil {
		return *x.ServerStartCode
	}
	return 0
}

func (x *CloseRegionRequest) GetCloseProcId() int64 {
	if x != nil && x.CloseProcId != nil {
		return *x.CloseProcId
	}
	return Default_CloseRegionRequest_CloseProcId
}

type CloseRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Closed *bool `protobuf:"varint,1,req,name=closed" json:"closed,omitempty"`
}

func (x *CloseRegionResponse) Reset() {
	*x = CloseRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRegionResponse) ProtoMessage() {}

func (x *CloseRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRegionResponse.ProtoReflect.Descriptor instead.
func (*CloseRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{11}
}

func (x *CloseRegionResponse) GetClosed() bool {
	if x != nil && x.Closed != nil {
		return *x.Closed
	}
	return false
}

//*
// Flushes the MemStore of the specified region.
// <p>
// This method is synchronous.
type FlushRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region              *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	IfOlderThanTs       *uint64          `protobuf:"varint,2,opt,name=if_older_than_ts,json=ifOlderThanTs" json:"if_older_than_ts,omitempty"`
	WriteFlushWalMarker *bool            `protobuf:"varint,3,opt,name=write_flush_wal_marker,json=writeFlushWalMarker" json:"write_flush_wal_marker,omitempty"` // whether to write a marker to WAL even if not flushed
	Family              []byte           `protobuf:"bytes,4,opt,name=family" json:"family,omitempty"`
}

func (x *FlushRegionRequest) Reset() {
	*x = FlushRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushRegionRequest) ProtoMessage() {}

func (x *FlushRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushRegionRequest.ProtoReflect.Descriptor instead.
func (*FlushRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{12}
}

func (x *FlushRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *FlushRegionRequest) GetIfOlderThanTs() uint64 {
	if x != nil && x.IfOlderThanTs != nil {
		return *x.IfOlderThanTs
	}
	return 0
}

func (x *FlushRegionRequest) GetWriteFlushWalMarker() bool {
	if x != nil && x.WriteFlushWalMarker != nil {
		return *x.WriteFlushWalMarker
	}
	return false
}

func (x *FlushRegionRequest) GetFamily() []byte {
	if x != nil {
		return x.Family
	}
	return nil
}

type FlushRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastFlushTime       *uint64 `protobuf:"varint,1,req,name=last_flush_time,json=lastFlushTime" json:"last_flush_time,omitempty"`
	Flushed             *bool   `protobuf:"varint,2,opt,name=flushed" json:"flushed,omitempty"`
	WroteFlushWalMarker *bool   `protobuf:"varint,3,opt,name=wrote_flush_wal_marker,json=wroteFlushWalMarker" json:"wrote_flush_wal_marker,omitempty"`
}

func (x *FlushRegionResponse) Reset() {
	*x = FlushRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlushRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlushRegionResponse) ProtoMessage() {}

func (x *FlushRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlushRegionResponse.ProtoReflect.Descriptor instead.
func (*FlushRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{13}
}

func (x *FlushRegionResponse) GetLastFlushTime() uint64 {
	if x != nil && x.LastFlushTime != nil {
		return *x.LastFlushTime
	}
	return 0
}

func (x *FlushRegionResponse) GetFlushed() bool {
	if x != nil && x.Flushed != nil {
		return *x.Flushed
	}
	return false
}

func (x *FlushRegionResponse) GetWroteFlushWalMarker() bool {
	if x != nil && x.WroteFlushWalMarker != nil {
		return *x.WroteFlushWalMarker
	}
	return false
}

//*
// Compacts the specified region.  Performs a major compaction if specified.
// <p>
// This method is asynchronous.
type CompactRegionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region *RegionSpecifier `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	Major  *bool            `protobuf:"varint,2,opt,name=major" json:"major,omitempty"`
	Family []byte           `protobuf:"bytes,3,opt,name=family" json:"family,omitempty"`
}

func (x *CompactRegionRequest) Reset() {
	*x = CompactRegionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactRegionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactRegionRequest) ProtoMessage() {}

func (x *CompactRegionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactRegionRequest.ProtoReflect.Descriptor instead.
func (*CompactRegionRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{14}
}

func (x *CompactRegionRequest) GetRegion() *RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *CompactRegionRequest) GetMajor() bool {
	if x != nil && x.Major != nil {
		return *x.Major
	}
	return false
}

func (x *CompactRegionRequest) GetFamily() []byte {
	if x != nil {
		return x.Family
	}
	return nil
}

type CompactRegionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompactRegionResponse) Reset() {
	*x = CompactRegionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactRegionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactRegionResponse) ProtoMessage() {}

func (x *CompactRegionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactRegionResponse.ProtoReflect.Descriptor instead.
func (*CompactRegionResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{15}
}

type CompactionSwitchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled *bool `protobuf:"varint,1,req,name=enabled" json:"enabled,omitempty"`
}

func (x *CompactionSwitchRequest) Reset() {
	*x = CompactionSwitchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactionSwitchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactionSwitchRequest) ProtoMessage() {}

func (x *CompactionSwitchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactionSwitchRequest.ProtoReflect.Descriptor instead.
func (*CompactionSwitchRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{16}
}

func (x *CompactionSwitchRequest) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type CompactionSwitchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrevState *bool `protobuf:"varint,1,req,name=prev_state,json=prevState" json:"prev_state,omitempty"`
}

func (x *CompactionSwitchResponse) Reset() {
	*x = CompactionSwitchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompactionSwitchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompactionSwitchResponse) ProtoMessage() {}

func (x *CompactionSwitchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompactionSwitchResponse.ProtoReflect.Descriptor instead.
func (*CompactionSwitchResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{17}
}

func (x *CompactionSwitchResponse) GetPrevState() bool {
	if x != nil && x.PrevState != nil {
		return *x.PrevState
	}
	return false
}

type UpdateFavoredNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateInfo []*UpdateFavoredNodesRequest_RegionUpdateInfo `protobuf:"bytes,1,rep,name=update_info,json=updateInfo" json:"update_info,omitempty"`
}

func (x *UpdateFavoredNodesRequest) Reset() {
	*x = UpdateFavoredNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFavoredNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFavoredNodesRequest) ProtoMessage() {}

func (x *UpdateFavoredNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFavoredNodesRequest.ProtoReflect.Descriptor instead.
func (*UpdateFavoredNodesRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateFavoredNodesRequest) GetUpdateInfo() []*UpdateFavoredNodesRequest_RegionUpdateInfo {
	if x != nil {
		return x.UpdateInfo
	}
	return nil
}

type UpdateFavoredNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *uint32 `protobuf:"varint,1,opt,name=response" json:"response,omitempty"`
}

func (x *UpdateFavoredNodesResponse) Reset() {
	*x = UpdateFavoredNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFavoredNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFavoredNodesResponse) ProtoMessage() {}

func (x *UpdateFavoredNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFavoredNodesResponse.ProtoReflect.Descriptor instead.
func (*UpdateFavoredNodesResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateFavoredNodesResponse) GetResponse() uint32 {
	if x != nil && x.Response != nil {
		return *x.Response
	}
	return 0
}

// Protocol buffer version of WAL for replication
type WALEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *WALKey `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	// Following may be null if the KVs/Cells are carried along the side in a cellblock (See
	// RPC for more on cellblocks). If Cells/KVs are in a cellblock, this next field is null
	// and associated_cell_count has count of Cells associated w/ this WALEntry
	KeyValueBytes [][]byte `protobuf:"bytes,2,rep,name=key_value_bytes,json=keyValueBytes" json:"key_value_bytes,omitempty"`
	// If Cell data is carried alongside in a cellblock, this is count of Cells in the cellblock.
	AssociatedCellCount *int32 `protobuf:"varint,3,opt,name=associated_cell_count,json=associatedCellCount" json:"associated_cell_count,omitempty"`
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{20}
}

func (x *WALEntry) GetKey() *WALKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WALEntry) GetKeyValueBytes() [][]byte {
	if x != nil {
		return x.KeyValueBytes
	}
	return nil
}

func (x *WALEntry) GetAssociatedCellCount() int32 {
	if x != nil && x.AssociatedCellCount != nil {
		return *x.AssociatedCellCount
	}
	return 0
}

//*
// Replicates the given entries. The guarantee is that the given entries
// will be durable on the slave cluster if this method returns without
// any exception.
type ReplicateWALEntryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry                      []*WALEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
	ReplicationClusterId       *string     `protobuf:"bytes,2,opt,name=replicationClusterId" json:"replicationClusterId,omitempty"`
	SourceBaseNamespaceDirPath *string     `protobuf:"bytes,3,opt,name=sourceBaseNamespaceDirPath" json:"sourceBaseNamespaceDirPath,omitempty"`
	SourceHFileArchiveDirPath  *string     `protobuf:"bytes,4,opt,name=sourceHFileArchiveDirPath" json:"sourceHFileArchiveDirPath,omitempty"`
}

func (x *ReplicateWALEntryRequest) Reset() {
	*x = ReplicateWALEntryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateWALEntryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateWALEntryRequest) ProtoMessage() {}

func (x *ReplicateWALEntryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateWALEntryRequest.ProtoReflect.Descriptor instead.
func (*ReplicateWALEntryRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{21}
}

func (x *ReplicateWALEntryRequest) GetEntry() []*WALEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *ReplicateWALEntryRequest) GetReplicationClusterId() string {
	if x != nil && x.ReplicationClusterId != nil {
		return *x.ReplicationClusterId
	}
	return ""
}

func (x *ReplicateWALEntryRequest) GetSourceBaseNamespaceDirPath() string {
	if x != nil && x.SourceBaseNamespaceDirPath != nil {
		return *x.SourceBaseNamespaceDirPath
	}
	return ""
}

func (x *ReplicateWALEntryRequest) GetSourceHFileArchiveDirPath() string {
	if x != nil && x.SourceHFileArchiveDirPath != nil {
		return *x.SourceHFileArchiveDirPath
	}
	return ""
}

type ReplicateWALEntryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReplicateWALEntryResponse) Reset() {
	*x = ReplicateWALEntryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicateWALEntryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicateWALEntryResponse) ProtoMessage() {}

func (x *ReplicateWALEntryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicateWALEntryResponse.ProtoReflect.Descriptor instead.
func (*ReplicateWALEntryResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{22}
}

type RollWALWriterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RollWALWriterRequest) Reset() {
	*x = RollWALWriterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollWALWriterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollWALWriterRequest) ProtoMessage() {}

func (x *RollWALWriterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollWALWriterRequest.ProtoReflect.Descriptor instead.
func (*RollWALWriterRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{23}
}

//
// Roll request responses no longer include regions to flush
// this list will always be empty when talking to a 1.0 server
type RollWALWriterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A list of encoded name of regions to flush
	RegionToFlush [][]byte `protobuf:"bytes,1,rep,name=region_to_flush,json=regionToFlush" json:"region_to_flush,omitempty"`
}

func (x *RollWALWriterResponse) Reset() {
	*x = RollWALWriterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RollWALWriterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RollWALWriterResponse) ProtoMessage() {}

func (x *RollWALWriterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RollWALWriterResponse.ProtoReflect.Descriptor instead.
func (*RollWALWriterResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{24}
}

func (x *RollWALWriterResponse) GetRegionToFlush() [][]byte {
	if x != nil {
		return x.RegionToFlush
	}
	return nil
}

type StopServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason *string `protobuf:"bytes,1,req,name=reason" json:"reason,omitempty"`
}

func (x *StopServerRequest) Reset() {
	*x = StopServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerRequest) ProtoMessage() {}

func (x *StopServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerRequest.ProtoReflect.Descriptor instead.
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{25}
}

func (x *StopServerRequest) GetReason() string {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return ""
}

type StopServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopServerResponse) Reset() {
	*x = StopServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopServerResponse) ProtoMessage() {}

func (x *StopServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopServerResponse.ProtoReflect.Descriptor instead.
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{26}
}

type GetServerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetServerInfoRequest) Reset() {
	*x = GetServerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInfoRequest) ProtoMessage() {}

func (x *GetServerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetServerInfoRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{27}
}

type ServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName *ServerName `protobuf:"bytes,1,req,name=server_name,json=serverName" json:"server_name,omitempty"`
	WebuiPort  *uint32     `protobuf:"varint,2,opt,name=webui_port,json=webuiPort" json:"webui_port,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{28}
}

func (x *ServerInfo) GetServerName() *ServerName {
	if x != nil {
		return x.ServerName
	}
	return nil
}

func (x *ServerInfo) GetWebuiPort() uint32 {
	if x != nil && x.WebuiPort != nil {
		return *x.WebuiPort
	}
	return 0
}

type GetServerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerInfo *ServerInfo `protobuf:"bytes,1,req,name=server_info,json=serverInfo" json:"server_info,omitempty"`
}

func (x *GetServerInfoResponse) Reset() {
	*x = GetServerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInfoResponse) ProtoMessage() {}

func (x *GetServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{29}
}

func (x *GetServerInfoResponse) GetServerInfo() *ServerInfo {
	if x != nil {
		return x.ServerInfo
	}
	return nil
}

type UpdateConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateConfigurationRequest) Reset() {
	*x = UpdateConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigurationRequest) ProtoMessage() {}

func (x *UpdateConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigurationRequest.ProtoReflect.Descriptor instead.
func (*UpdateConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{30}
}

type UpdateConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateConfigurationResponse) Reset() {
	*x = UpdateConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConfigurationResponse) ProtoMessage() {}

func (x *UpdateConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConfigurationResponse.ProtoReflect.Descriptor instead.
func (*UpdateConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{31}
}

type GetRegionLoadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableName *TableName `protobuf:"bytes,1,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
}

func (x *GetRegionLoadRequest) Reset() {
	*x = GetRegionLoadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionLoadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionLoadRequest) ProtoMessage() {}

func (x *GetRegionLoadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionLoadRequest.ProtoReflect.Descriptor instead.
func (*GetRegionLoadRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{32}
}

func (x *GetRegionLoadRequest) GetTableName() *TableName {
	if x != nil {
		return x.TableName
	}
	return nil
}

type GetRegionLoadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionLoads []*RegionLoad `protobuf:"bytes,1,rep,name=region_loads,json=regionLoads" json:"region_loads,omitempty"`
}

func (x *GetRegionLoadResponse) Reset() {
	*x = GetRegionLoadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRegionLoadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionLoadResponse) ProtoMessage() {}

func (x *GetRegionLoadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionLoadResponse.ProtoReflect.Descriptor instead.
func (*GetRegionLoadResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{33}
}

func (x *GetRegionLoadResponse) GetRegionLoads() []*RegionLoad {
	if x != nil {
		return x.RegionLoads
	}
	return nil
}

type ClearCompactionQueuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueueName []string `protobuf:"bytes,1,rep,name=queue_name,json=queueName" json:"queue_name,omitempty"`
}

func (x *ClearCompactionQueuesRequest) Reset() {
	*x = ClearCompactionQueuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCompactionQueuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCompactionQueuesRequest) ProtoMessage() {}

func (x *ClearCompactionQueuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCompactionQueuesRequest.ProtoReflect.Descriptor instead.
func (*ClearCompactionQueuesRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{34}
}

func (x *ClearCompactionQueuesRequest) GetQueueName() []string {
	if x != nil {
		return x.QueueName
	}
	return nil
}

type ClearCompactionQueuesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearCompactionQueuesResponse) Reset() {
	*x = ClearCompactionQueuesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearCompactionQueuesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearCompactionQueuesResponse) ProtoMessage() {}

func (x *ClearCompactionQueuesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearCompactionQueuesResponse.ProtoReflect.Descriptor instead.
func (*ClearCompactionQueuesResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{35}
}

type ClearRegionBlockCacheRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region []*RegionSpecifier `protobuf:"bytes,1,rep,name=region" json:"region,omitempty"`
}

func (x *ClearRegionBlockCacheRequest) Reset() {
	*x = ClearRegionBlockCacheRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRegionBlockCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRegionBlockCacheRequest) ProtoMessage() {}

func (x *ClearRegionBlockCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRegionBlockCacheRequest.ProtoReflect.Descriptor instead.
func (*ClearRegionBlockCacheRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{36}
}

func (x *ClearRegionBlockCacheRequest) GetRegion() []*RegionSpecifier {
	if x != nil {
		return x.Region
	}
	return nil
}

type ClearRegionBlockCacheResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stats *CacheEvictionStats `protobuf:"bytes,1,req,name=stats" json:"stats,omitempty"`
}

func (x *ClearRegionBlockCacheResponse) Reset() {
	*x = ClearRegionBlockCacheResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearRegionBlockCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearRegionBlockCacheResponse) ProtoMessage() {}

func (x *ClearRegionBlockCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearRegionBlockCacheResponse.ProtoReflect.Descriptor instead.
func (*ClearRegionBlockCacheResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{37}
}

func (x *ClearRegionBlockCacheResponse) GetStats() *CacheEvictionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type RemoteProcedureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcId    *uint64 `protobuf:"varint,1,req,name=proc_id,json=procId" json:"proc_id,omitempty"`
	ProcClass *string `protobuf:"bytes,2,req,name=proc_class,json=procClass" json:"proc_class,omitempty"`
	ProcData  []byte  `protobuf:"bytes,3,opt,name=proc_data,json=procData" json:"proc_data,omitempty"`
}

func (x *RemoteProcedureRequest) Reset() {
	*x = RemoteProcedureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteProcedureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteProcedureRequest) ProtoMessage() {}

func (x *RemoteProcedureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteProcedureRequest.ProtoReflect.Descriptor instead.
func (*RemoteProcedureRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{38}
}

func (x *RemoteProcedureRequest) GetProcId() uint64 {
	if x != nil && x.ProcId != nil {
		return *x.ProcId
	}
	return 0
}

func (x *RemoteProcedureRequest) GetProcClass() string {
	if x != nil && x.ProcClass != nil {
		return *x.ProcClass
	}
	return ""
}

func (x *RemoteProcedureRequest) GetProcData() []byte {
	if x != nil {
		return x.ProcData
	}
	return nil
}

type ExecuteProceduresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenRegion  []*OpenRegionRequest      `protobuf:"bytes,1,rep,name=open_region,json=openRegion" json:"open_region,omitempty"`
	CloseRegion []*CloseRegionRequest     `protobuf:"bytes,2,rep,name=close_region,json=closeRegion" json:"close_region,omitempty"`
	Proc        []*RemoteProcedureRequest `protobuf:"bytes,3,rep,name=proc" json:"proc,omitempty"`
}

func (x *ExecuteProceduresRequest) Reset() {
	*x = ExecuteProceduresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteProceduresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteProceduresRequest) ProtoMessage() {}

func (x *ExecuteProceduresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteProceduresRequest.ProtoReflect.Descriptor instead.
func (*ExecuteProceduresRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{39}
}

func (x *ExecuteProceduresRequest) GetOpenRegion() []*OpenRegionRequest {
	if x != nil {
		return x.OpenRegion
	}
	return nil
}

func (x *ExecuteProceduresRequest) GetCloseRegion() []*CloseRegionRequest {
	if x != nil {
		return x.CloseRegion
	}
	return nil
}

func (x *ExecuteProceduresRequest) GetProc() []*RemoteProcedureRequest {
	if x != nil {
		return x.Proc
	}
	return nil
}

type ExecuteProceduresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExecuteProceduresResponse) Reset() {
	*x = ExecuteProceduresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecuteProceduresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteProceduresResponse) ProtoMessage() {}

func (x *ExecuteProceduresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteProceduresResponse.ProtoReflect.Descriptor instead.
func (*ExecuteProceduresResponse) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{40}
}

//*
// Slow/Large log (LogRequest) use-case specific RPC request. This request payload will be
// converted in bytes and sent to generic RPC API: GetLogEntries
// LogRequest message has two params:
// 1. log_class_name: SlowLogResponseRequest (for Slow/Large log use-case)
// 2. log_message: SlowLogResponseRequest converted in bytes (for Slow/Large log use-case)
type SlowLogResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionName       *string                                  `protobuf:"bytes,1,opt,name=region_name,json=regionName" json:"region_name,omitempty"`
	TableName        *string                                  `protobuf:"bytes,2,opt,name=table_name,json=tableName" json:"table_name,omitempty"`
	ClientAddress    *string                                  `protobuf:"bytes,3,opt,name=client_address,json=clientAddress" json:"client_address,omitempty"`
	UserName         *string                                  `protobuf:"bytes,4,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Limit            *uint32                                  `protobuf:"varint,5,opt,name=limit,def=10" json:"limit,omitempty"`
	FilterByOperator *SlowLogResponseRequest_FilterByOperator `protobuf:"varint,6,opt,name=filter_by_operator,json=filterByOperator,enum=pb.SlowLogResponseRequest_FilterByOperator,def=1" json:"filter_by_operator,omitempty"`
	LogType          *SlowLogResponseRequest_LogType          `protobuf:"varint,7,opt,name=log_type,json=logType,enum=pb.SlowLogResponseRequest_LogType" json:"log_type,omitempty"`
}

// Default values for SlowLogResponseRequest fields.
const (
	Default_SlowLogResponseRequest_Limit            = uint32(10)
	Default_SlowLogResponseRequest_FilterByOperator = SlowLogResponseRequest_OR
)

func (x *SlowLogResponseRequest) Reset() {
	*x = SlowLogResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlowLogResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlowLogResponseRequest) ProtoMessage() {}

func (x *SlowLogResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlowLogResponseRequest.ProtoReflect.Descriptor instead.
func (*SlowLogResponseRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{41}
}

func (x *SlowLogResponseRequest) GetRegionName() string {
	if x != nil && x.RegionName != nil {
		return *x.RegionName
	}
	return ""
}

func (x *SlowLogResponseRequest) GetTableName() string {
	if x != nil && x.TableName != nil {
		return *x.TableName
	}
	return ""
}

func (x *SlowLogResponseRequest) GetClientAddress() string {
	if x != nil && x.ClientAddress != nil {
		return *x.ClientAddress
	}
	return ""
}

func (x *SlowLogResponseRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *SlowLogResponseRequest) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return Default_SlowLogResponseRequest_Limit
}

func (x *SlowLogResponseRequest) GetFilterByOperator() SlowLogResponseRequest_FilterByOperator {
	if x != nil && x.FilterByOperator != nil {
		return *x.FilterByOperator
	}
	return Default_SlowLogResponseRequest_FilterByOperator
}

func (x *SlowLogResponseRequest) GetLogType() SlowLogResponseRequest_LogType {
	if x != nil && x.LogType != nil {
		return *x.LogType
	}
	return SlowLogResponseRequest_SLOW_LOG
}

//*
// Slow/Large log (LogEntry) use-case specific RPC response. This response payload will be
// converted in bytes by servers and sent as response to generic RPC API: GetLogEntries
// LogEntry message has two params:
// 1. log_class_name: SlowLogResponses (for Slow/Large log use-case)
// 2. log_message: SlowLogResponses converted in bytes (for Slow/Large log use-case)
type SlowLogResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlowLogPayloads []*SlowLogPayload `protobuf:"bytes,1,rep,name=slow_log_payloads,json=slowLogPayloads" json:"slow_log_payloads,omitempty"`
}

func (x *SlowLogResponses) Reset() {
	*x = SlowLogResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlowLogResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlowLogResponses) ProtoMessage() {}

func (x *SlowLogResponses) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlowLogResponses.ProtoReflect.Descriptor instead.
func (*SlowLogResponses) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{42}
}

func (x *SlowLogResponses) GetSlowLogPayloads() []*SlowLogPayload {
	if x != nil {
		return x.SlowLogPayloads
	}
	return nil
}

type ClearSlowLogResponseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ClearSlowLogResponseRequest) Reset() {
	*x = ClearSlowLogResponseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearSlowLogResponseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSlowLogResponseRequest) ProtoMessage() {}

func (x *ClearSlowLogResponseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSlowLogResponseRequest.ProtoReflect.Descriptor instead.
func (*ClearSlowLogResponseRequest) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{43}
}

type ClearSlowLogResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsCleaned *bool `protobuf:"varint,1,req,name=is_cleaned,json=isCleaned" json:"is_cleaned,omitempty"`
}

func (x *ClearSlowLogResponses) Reset() {
	*x = ClearSlowLogResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearSlowLogResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearSlowLogResponses) ProtoMessage() {}

func (x *ClearSlowLogResponses) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearSlowLogResponses.ProtoReflect.Descriptor instead.
func (*ClearSlowLogResponses) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{44}
}

func (x *ClearSlowLogResponses) GetIsCleaned() bool {
	if x != nil && x.IsCleaned != nil {
		return *x.IsCleaned
	}
	return false
}

type OpenRegionRequest_RegionOpenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region               *RegionInfo   `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	VersionOfOfflineNode *uint32       `protobuf:"varint,2,opt,name=version_of_offline_node,json=versionOfOfflineNode" json:"version_of_offline_node,omitempty"`
	FavoredNodes         []*ServerName `protobuf:"bytes,3,rep,name=favored_nodes,json=favoredNodes" json:"favored_nodes,omitempty"`
	// open region for distributedLogReplay
	// optional bool DEPRECATED_openForDistributedLogReplay = 4;
	OpenProcId *int64 `protobuf:"varint,5,opt,name=open_proc_id,json=openProcId,def=-1" json:"open_proc_id,omitempty"`
}

// Default values for OpenRegionRequest_RegionOpenInfo fields.
const (
	Default_OpenRegionRequest_RegionOpenInfo_OpenProcId = int64(-1)
)

func (x *OpenRegionRequest_RegionOpenInfo) Reset() {
	*x = OpenRegionRequest_RegionOpenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenRegionRequest_RegionOpenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRegionRequest_RegionOpenInfo) ProtoMessage() {}

func (x *OpenRegionRequest_RegionOpenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRegionRequest_RegionOpenInfo.ProtoReflect.Descriptor instead.
func (*OpenRegionRequest_RegionOpenInfo) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{6, 0}
}

func (x *OpenRegionRequest_RegionOpenInfo) GetRegion() *RegionInfo {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *OpenRegionRequest_RegionOpenInfo) GetVersionOfOfflineNode() uint32 {
	if x != nil && x.VersionOfOfflineNode != nil {
		return *x.VersionOfOfflineNode
	}
	return 0
}

func (x *OpenRegionRequest_RegionOpenInfo) GetFavoredNodes() []*ServerName {
	if x != nil {
		return x.FavoredNodes
	}
	return nil
}

func (x *OpenRegionRequest_RegionOpenInfo) GetOpenProcId() int64 {
	if x != nil && x.OpenProcId != nil {
		return *x.OpenProcId
	}
	return Default_OpenRegionRequest_RegionOpenInfo_OpenProcId
}

type UpdateFavoredNodesRequest_RegionUpdateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Region       *RegionInfo   `protobuf:"bytes,1,req,name=region" json:"region,omitempty"`
	FavoredNodes []*ServerName `protobuf:"bytes,2,rep,name=favored_nodes,json=favoredNodes" json:"favored_nodes,omitempty"`
}

func (x *UpdateFavoredNodesRequest_RegionUpdateInfo) Reset() {
	*x = UpdateFavoredNodesRequest_RegionUpdateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Admin_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFavoredNodesRequest_RegionUpdateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFavoredNodesRequest_RegionUpdateInfo) ProtoMessage() {}

func (x *UpdateFavoredNodesRequest_RegionUpdateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Admin_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFavoredNodesRequest_RegionUpdateInfo.ProtoReflect.Descriptor instead.
func (*UpdateFavoredNodesRequest_RegionUpdateInfo) Descriptor() ([]byte, []int) {
	return file_Admin_proto_rawDescGZIP(), []int{18, 0}
}

func (x *UpdateFavoredNodesRequest_RegionUpdateInfo) GetRegion() *RegionInfo {
	if x != nil {
		return x.Region
	}
	return nil
}

func (x *UpdateFavoredNodesRequest_RegionUpdateInfo) GetFavoredNodes() []*ServerName {
	if x != nil {
		return x.FavoredNodes
	}
	return nil
}

var File_Admin_proto protoreflect.FileDescriptor

var file_Admin_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x1a, 0x0b, 0x48, 0x42, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b,
	0x51, 0x75, 0x6f, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x09, 0x57, 0x41, 0x4c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x54, 0x6f, 0x6f,
	0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x72, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x65, 0x73, 0x74, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x52, 0x6f, 0x77, 0x22, 0xca, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x54, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x70, 0x6c, 0x69, 0x74,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65, 0x73, 0x74, 0x5f, 0x73, 0x70, 0x6c, 0x69,
	0x74, 0x5f, 0x72, 0x6f, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x62, 0x65, 0x73,
	0x74, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x6f, 0x77, 0x22, 0x46, 0x0a, 0x0f, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x10,
	0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x4d, 0x41, 0x4a, 0x4f, 0x52, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x10,
	0x03, 0x22, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22, 0x35, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a,
	0x0a, 0x17, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xfb, 0x02, 0x0a, 0x11, 0x4f,
	0x70, 0x65, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x41, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0xca, 0x01, 0x0a, 0x0e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4f, 0x66, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a,
	0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x64, 0x22, 0xae, 0x01, 0x0a, 0x12, 0x4f, 0x70, 0x65,
	0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4e, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x48, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x45, 0x4e, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x4f, 0x50, 0x45,
	0x4e, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f,
	0x4f, 0x50, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x45, 0x0a, 0x13, 0x57, 0x61, 0x72,
	0x6d, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x16, 0x0a, 0x14, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x12, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x17,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x69,
	0x6e, 0x67, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4f, 0x66, 0x43, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x5a, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74,
	0x72, 0x75, 0x65, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x5a, 0x4b, 0x12, 0x3d, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x11, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0d,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x22, 0xb7, 0x01, 0x0a, 0x12, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x10, 0x69, 0x66, 0x5f, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x5f, 0x74, 0x68, 0x61, 0x6e, 0x5f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x69, 0x66, 0x4f, 0x6c, 0x64, 0x65, 0x72, 0x54, 0x68, 0x61, 0x6e, 0x54, 0x73,
	0x12, 0x33, 0x0a, 0x16, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f,
	0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x13, 0x77, 0x72, 0x69, 0x74, 0x65, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x57, 0x61, 0x6c, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22, 0x8c, 0x01,
	0x0a, 0x13, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x6c,
	0x75, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0d,
	0x6c, 0x61, 0x73, 0x74, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x66, 0x6c, 0x75, 0x73, 0x68, 0x65, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x77, 0x72, 0x6f, 0x74, 0x65,
	0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x5f, 0x77, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x57, 0x61, 0x6c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x71, 0x0a, 0x14,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x22,
	0x17, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x39, 0x0a,
	0x18, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x65,
	0x76, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x70,
	0x72, 0x65, 0x76, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x6f, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0c, 0x66, 0x61, 0x76, 0x6f,
	0x72, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x08, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70,
	0x62, 0x2e, 0x57, 0x41, 0x4c, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0d, 0x6b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x43, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf0, 0x01, 0x0a, 0x18, 0x52, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x41, 0x4c, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e,
	0x0a, 0x1a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x44, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x3c,
	0x0a, 0x19, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x44, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x44, 0x69, 0x72, 0x50, 0x61, 0x74, 0x68, 0x22, 0x1b, 0x0a, 0x19,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x52, 0x6f, 0x6c,
	0x6c, 0x57, 0x41, 0x4c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x3f, 0x0a, 0x15, 0x52, 0x6f, 0x6c, 0x6c, 0x57, 0x41, 0x4c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x5f, 0x66, 0x6c, 0x75, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x46, 0x6c, 0x75,
	0x73, 0x68, 0x22, 0x2b, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5c, 0x0a,
	0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x77, 0x65, 0x62, 0x75, 0x69, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x77, 0x65, 0x62, 0x75, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x48, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x44, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x31, 0x0a, 0x0c, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x61, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x1c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x1c, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x22, 0x4d, 0x0a, 0x1d, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x45, 0x76, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x22, 0x6d, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x04, 0x52, 0x06, 0x70, 0x72, 0x6f,
	0x63, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xbd, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x64, 0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x70, 0x72, 0x6f, 0x63, 0x22,
	0x1b, 0x0a, 0x19, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa1, 0x03, 0x0a,
	0x16, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x02, 0x31, 0x30, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x5d, 0x0a, 0x12, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f,
	0x62, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x02,
	0x4f, 0x52, 0x52, 0x10, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x23, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x42, 0x79, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x44, 0x10, 0x00,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x52, 0x10, 0x01, 0x22, 0x26, 0x0a, 0x07, 0x4c, 0x6f, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4c, 0x4f, 0x57, 0x5f, 0x4c, 0x4f, 0x47, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x10, 0x01,
	0x22, 0x52, 0x0a, 0x10, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x11, 0x73, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x6f, 0x67,
	0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x0f, 0x73, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x6c, 0x6f,
	0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x15, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x77,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x65, 0x64, 0x32, 0xc1, 0x0d, 0x0a, 0x0c,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x0c, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x72, 0x6d, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x72,
	0x6d, 0x75, 0x70, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c, 0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x6c,
	0x75, 0x73, 0x68, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4d, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x52, 0x65, 0x70, 0x6c,
	0x61, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65, 0x57,
	0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x0d, 0x52, 0x6f, 0x6c, 0x6c, 0x57, 0x41, 0x4c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6c, 0x6c, 0x57, 0x41, 0x4c, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x6f, 0x6c, 0x6c, 0x57, 0x41, 0x4c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d,
	0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65,
	0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x65, 0x64,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x43,
	0x6c, 0x65, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x61, 0x63, 0x68, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x73, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x51,
	0x75, 0x6f, 0x74, 0x61, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x51, 0x75, 0x6f, 0x74, 0x61, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x2e,
	0x70, 0x62, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64,
	0x75, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x62,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x64, 0x75, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x43, 0x6c,
	0x65, 0x61, 0x72, 0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53,
	0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x53, 0x6c, 0x6f, 0x77, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x12, 0x2d, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x48, 0x0a, 0x31, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x68, 0x61,
	0x64, 0x6f, 0x6f, 0x70, 0x2e, 0x68, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x73, 0x68, 0x61, 0x64, 0x65,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x0b, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x48, 0x01, 0x88, 0x01, 0x01, 0xa0, 0x01, 0x01,
}

var (
	file_Admin_proto_rawDescOnce sync.Once
	file_Admin_proto_rawDescData = file_Admin_proto_rawDesc
)

func file_Admin_proto_rawDescGZIP() []byte {
	file_Admin_proto_rawDescOnce.Do(func() {
		file_Admin_proto_rawDescData = protoimpl.X.CompressGZIP(file_Admin_proto_rawDescData)
	})
	return file_Admin_proto_rawDescData
}

var file_Admin_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_Admin_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_Admin_proto_goTypes = []interface{}{
	(GetRegionInfoResponse_CompactionState)(0),         // 0: pb.GetRegionInfoResponse.CompactionState
	(OpenRegionResponse_RegionOpeningState)(0),         // 1: pb.OpenRegionResponse.RegionOpeningState
	(SlowLogResponseRequest_FilterByOperator)(0),       // 2: pb.SlowLogResponseRequest.FilterByOperator
	(SlowLogResponseRequest_LogType)(0),                // 3: pb.SlowLogResponseRequest.LogType
	(*GetRegionInfoRequest)(nil),                       // 4: pb.GetRegionInfoRequest
	(*GetRegionInfoResponse)(nil),                      // 5: pb.GetRegionInfoResponse
	(*GetStoreFileRequest)(nil),                        // 6: pb.GetStoreFileRequest
	(*GetStoreFileResponse)(nil),                       // 7: pb.GetStoreFileResponse
	(*GetOnlineRegionRequest)(nil),                     // 8: pb.GetOnlineRegionRequest
	(*GetOnlineRegionResponse)(nil),                    // 9: pb.GetOnlineRegionResponse
	(*OpenRegionRequest)(nil),                          // 10: pb.OpenRegionRequest
	(*OpenRegionResponse)(nil),                         // 11: pb.OpenRegionResponse
	(*WarmupRegionRequest)(nil),                        // 12: pb.WarmupRegionRequest
	(*WarmupRegionResponse)(nil),                       // 13: pb.WarmupRegionResponse
	(*CloseRegionRequest)(nil),                         // 14: pb.CloseRegionRequest
	(*CloseRegionResponse)(nil),                        // 15: pb.CloseRegionResponse
	(*FlushRegionRequest)(nil),                         // 16: pb.FlushRegionRequest
	(*FlushRegionResponse)(nil),                        // 17: pb.FlushRegionResponse
	(*CompactRegionRequest)(nil),                       // 18: pb.CompactRegionRequest
	(*CompactRegionResponse)(nil),                      // 19: pb.CompactRegionResponse
	(*CompactionSwitchRequest)(nil),                    // 20: pb.CompactionSwitchRequest
	(*CompactionSwitchResponse)(nil),                   // 21: pb.CompactionSwitchResponse
	(*UpdateFavoredNodesRequest)(nil),                  // 22: pb.UpdateFavoredNodesRequest
	(*UpdateFavoredNodesResponse)(nil),                 // 23: pb.UpdateFavoredNodesResponse
	(*WALEntry)(nil),                                   // 24: pb.WALEntry
	(*ReplicateWALEntryRequest)(nil),                   // 25: pb.ReplicateWALEntryRequest
	(*ReplicateWALEntryResponse)(nil),                  // 26: pb.ReplicateWALEntryResponse
	(*RollWALWriterRequest)(nil),                       // 27: pb.RollWALWriterRequest
	(*RollWALWriterResponse)(nil),                      // 28: pb.RollWALWriterResponse
	(*StopServerRequest)(nil),                          // 29: pb.StopServerRequest
	(*StopServerResponse)(nil),                         // 30: pb.StopServerResponse
	(*GetServerInfoRequest)(nil),                       // 31: pb.GetServerInfoRequest
	(*ServerInfo)(nil),                                 // 32: pb.ServerInfo
	(*GetServerInfoResponse)(nil),                      // 33: pb.GetServerInfoResponse
	(*UpdateConfigurationRequest)(nil),                 // 34: pb.UpdateConfigurationRequest
	(*UpdateConfigurationResponse)(nil),                // 35: pb.UpdateConfigurationResponse
	(*GetRegionLoadRequest)(nil),                       // 36: pb.GetRegionLoadRequest
	(*GetRegionLoadResponse)(nil),                      // 37: pb.GetRegionLoadResponse
	(*ClearCompactionQueuesRequest)(nil),               // 38: pb.ClearCompactionQueuesRequest
	(*ClearCompactionQueuesResponse)(nil),              // 39: pb.ClearCompactionQueuesResponse
	(*ClearRegionBlockCacheRequest)(nil),               // 40: pb.ClearRegionBlockCacheRequest
	(*ClearRegionBlockCacheResponse)(nil),              // 41: pb.ClearRegionBlockCacheResponse
	(*RemoteProcedureRequest)(nil),                     // 42: pb.RemoteProcedureRequest
	(*ExecuteProceduresRequest)(nil),                   // 43: pb.ExecuteProceduresRequest
	(*ExecuteProceduresResponse)(nil),                  // 44: pb.ExecuteProceduresResponse
	(*SlowLogResponseRequest)(nil),                     // 45: pb.SlowLogResponseRequest
	(*SlowLogResponses)(nil),                           // 46: pb.SlowLogResponses
	(*ClearSlowLogResponseRequest)(nil),                // 47: pb.ClearSlowLogResponseRequest
	(*ClearSlowLogResponses)(nil),                      // 48: pb.ClearSlowLogResponses
	(*OpenRegionRequest_RegionOpenInfo)(nil),           // 49: pb.OpenRegionRequest.RegionOpenInfo
	(*UpdateFavoredNodesRequest_RegionUpdateInfo)(nil), // 50: pb.UpdateFavoredNodesRequest.RegionUpdateInfo
	(*RegionSpecifier)(nil),                            // 51: pb.RegionSpecifier
	(*RegionInfo)(nil),                                 // 52: pb.RegionInfo
	(*ServerName)(nil),                                 // 53: pb.ServerName
	(*WALKey)(nil),                                     // 54: pb.WALKey
	(*TableName)(nil),                                  // 55: pb.TableName
	(*RegionLoad)(nil),                                 // 56: pb.RegionLoad
	(*CacheEvictionStats)(nil),                         // 57: pb.CacheEvictionStats
	(*SlowLogPayload)(nil),                             // 58: pb.SlowLogPayload
	(*GetSpaceQuotaSnapshotsRequest)(nil),              // 59: pb.GetSpaceQuotaSnapshotsRequest
	(*LogRequest)(nil),                                 // 60: pb.LogRequest
	(*GetSpaceQuotaSnapshotsResponse)(nil),             // 61: pb.GetSpaceQuotaSnapshotsResponse
	(*LogEntry)(nil),                                   // 62: pb.LogEntry
}
var file_Admin_proto_depIdxs = []int32{
	51, // 0: pb.GetRegionInfoRequest.region:type_name -> pb.RegionSpecifier
	52, // 1: pb.GetRegionInfoResponse.region_info:type_name -> pb.RegionInfo
	0,  // 2: pb.GetRegionInfoResponse.compaction_state:type_name -> pb.GetRegionInfoResponse.CompactionState
	51, // 3: pb.GetStoreFileRequest.region:type_name -> pb.RegionSpecifier
	52, // 4: pb.GetOnlineRegionResponse.region_info:type_name -> pb.RegionInfo
	49, // 5: pb.OpenRegionRequest.open_info:type_name -> pb.OpenRegionRequest.RegionOpenInfo
	1,  // 6: pb.OpenRegionResponse.opening_state:type_name -> pb.OpenRegionResponse.RegionOpeningState
	52, // 7: pb.WarmupRegionRequest.regionInfo:type_name -> pb.RegionInfo
	51, // 8: pb.CloseRegionRequest.region:type_name -> pb.RegionSpecifier
	53, // 9: pb.CloseRegionRequest.destination_server:type_name -> pb.ServerName
	51, // 10: pb.FlushRegionRequest.region:type_name -> pb.RegionSpecifier
	51, // 11: pb.CompactRegionRequest.region:type_name -> pb.RegionSpecifier
	50, // 12: pb.UpdateFavoredNodesRequest.update_info:type_name -> pb.UpdateFavoredNodesRequest.RegionUpdateInfo
	54, // 13: pb.WALEntry.key:type_name -> pb.WALKey
	24, // 14: pb.ReplicateWALEntryRequest.entry:type_name -> pb.WALEntry
	53, // 15: pb.ServerInfo.server_name:type_name -> pb.ServerName
	32, // 16: pb.GetServerInfoResponse.server_info:type_name -> pb.ServerInfo
	55, // 17: pb.GetRegionLoadRequest.table_name:type_name -> pb.TableName
	56, // 18: pb.GetRegionLoadResponse.region_loads:type_name -> pb.RegionLoad
	51, // 19: pb.ClearRegionBlockCacheRequest.region:type_name -> pb.RegionSpecifier
	57, // 20: pb.ClearRegionBlockCacheResponse.stats:type_name -> pb.CacheEvictionStats
	10, // 21: pb.ExecuteProceduresRequest.open_region:type_name -> pb.OpenRegionRequest
	14, // 22: pb.ExecuteProceduresRequest.close_region:type_name -> pb.CloseRegionRequest
	42, // 23: pb.ExecuteProceduresRequest.proc:type_name -> pb.RemoteProcedureRequest
	2,  // 24: pb.SlowLogResponseRequest.filter_by_operator:type_name -> pb.SlowLogResponseRequest.FilterByOperator
	3,  // 25: pb.SlowLogResponseRequest.log_type:type_name -> pb.SlowLogResponseRequest.LogType
	58, // 26: pb.SlowLogResponses.slow_log_payloads:type_name -> pb.SlowLogPayload
	52, // 27: pb.OpenRegionRequest.RegionOpenInfo.region:type_name -> pb.RegionInfo
	53, // 28: pb.OpenRegionRequest.RegionOpenInfo.favored_nodes:type_name -> pb.ServerName
	52, // 29: pb.UpdateFavoredNodesRequest.RegionUpdateInfo.region:type_name -> pb.RegionInfo
	53, // 30: pb.UpdateFavoredNodesRequest.RegionUpdateInfo.favored_nodes:type_name -> pb.ServerName
	4,  // 31: pb.AdminService.GetRegionInfo:input_type -> pb.GetRegionInfoRequest
	6,  // 32: pb.AdminService.GetStoreFile:input_type -> pb.GetStoreFileRequest
	8,  // 33: pb.AdminService.GetOnlineRegion:input_type -> pb.GetOnlineRegionRequest
	10, // 34: pb.AdminService.OpenRegion:input_type -> pb.OpenRegionRequest
	12, // 35: pb.AdminService.WarmupRegion:input_type -> pb.WarmupRegionRequest
	14, // 36: pb.AdminService.CloseRegion:input_type -> pb.CloseRegionRequest
	16, // 37: pb.AdminService.FlushRegion:input_type -> pb.FlushRegionRequest
	20, // 38: pb.AdminService.CompactionSwitch:input_type -> pb.CompactionSwitchRequest
	18, // 39: pb.AdminService.CompactRegion:input_type -> pb.CompactRegionRequest
	25, // 40: pb.AdminService.ReplicateWALEntry:input_type -> pb.ReplicateWALEntryRequest
	25, // 41: pb.AdminService.Replay:input_type -> pb.ReplicateWALEntryRequest
	27, // 42: pb.AdminService.RollWALWriter:input_type -> pb.RollWALWriterRequest
	31, // 43: pb.AdminService.GetServerInfo:input_type -> pb.GetServerInfoRequest
	29, // 44: pb.AdminService.StopServer:input_type -> pb.StopServerRequest
	22, // 45: pb.AdminService.UpdateFavoredNodes:input_type -> pb.UpdateFavoredNodesRequest
	34, // 46: pb.AdminService.UpdateConfiguration:input_type -> pb.UpdateConfigurationRequest
	36, // 47: pb.AdminService.GetRegionLoad:input_type -> pb.GetRegionLoadRequest
	38, // 48: pb.AdminService.ClearCompactionQueues:input_type -> pb.ClearCompactionQueuesRequest
	40, // 49: pb.AdminService.ClearRegionBlockCache:input_type -> pb.ClearRegionBlockCacheRequest
	59, // 50: pb.AdminService.GetSpaceQuotaSnapshots:input_type -> pb.GetSpaceQuotaSnapshotsRequest
	43, // 51: pb.AdminService.ExecuteProcedures:input_type -> pb.ExecuteProceduresRequest
	47, // 52: pb.AdminService.ClearSlowLogsResponses:input_type -> pb.ClearSlowLogResponseRequest
	60, // 53: pb.AdminService.GetLogEntries:input_type -> pb.LogRequest
	5,  // 54: pb.AdminService.GetRegionInfo:output_type -> pb.GetRegionInfoResponse
	7,  // 55: pb.AdminService.GetStoreFile:output_type -> pb.GetStoreFileResponse
	9,  // 56: pb.AdminService.GetOnlineRegion:output_type -> pb.GetOnlineRegionResponse
	11, // 57: pb.AdminService.OpenRegion:output_type -> pb.OpenRegionResponse
	13, // 58: pb.AdminService.WarmupRegion:output_type -> pb.WarmupRegionResponse
	15, // 59: pb.AdminService.CloseRegion:output_type -> pb.CloseRegionResponse
	17, // 60: pb.AdminService.FlushRegion:output_type -> pb.FlushRegionResponse
	21, // 61: pb.AdminService.CompactionSwitch:output_type -> pb.CompactionSwitchResponse
	19, // 62: pb.AdminService.CompactRegion:output_type -> pb.CompactRegionResponse
	26, // 63: pb.AdminService.ReplicateWALEntry:output_type -> pb.ReplicateWALEntryResponse
	26, // 64: pb.AdminService.Replay:output_type -> pb.ReplicateWALEntryResponse
	28, // 65: pb.AdminService.RollWALWriter:output_type -> pb.RollWALWriterResponse
	33, // 66: pb.AdminService.GetServerInfo:output_type -> pb.GetServerInfoResponse
	30, // 67: pb.AdminService.StopServer:output_type -> pb.StopServerResponse
	23, // 68: pb.AdminService.UpdateFavoredNodes:output_type -> pb.UpdateFavoredNodesResponse
	35, // 69: pb.AdminService.UpdateConfiguration:output_type -> pb.UpdateConfigurationResponse
	37, // 70: pb.AdminService.GetRegionLoad:output_type -> pb.GetRegionLoadResponse
	39, // 71: pb.AdminService.ClearCompactionQueues:output_type -> pb.ClearCompactionQueuesResponse
	41, // 72: pb.AdminService.ClearRegionBlockCache:output_type -> pb.ClearRegionBlockCacheResponse
	61, // 73: pb.AdminService.GetSpaceQuotaSnapshots:output_type -> pb.GetSpaceQuotaSnapshotsResponse
	44, // 74: pb.AdminService.ExecuteProcedures:output_type -> pb.ExecuteProceduresResponse
	48, // 75: pb.AdminService.ClearSlowLogsResponses:output_type -> pb.ClearSlowLogResponses
	62, // 76: pb.AdminService.GetLogEntries:output_type -> pb.LogEntry
	54, // [54:77] is the sub-list for method output_type
	31, // [31:54] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_Admin_proto_init() }
func file_Admin_proto_init() {
	if File_Admin_proto != nil {
		return
	}
	file_HBase_proto_init()
	file_Quota_proto_init()
	file_ClusterStatus_proto_init()
	file_WAL_proto_init()
	file_TooSlowLog_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Admin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStoreFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOnlineRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarmupRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarmupRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlushRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactRegionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactRegionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactionSwitchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompactionSwitchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFavoredNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFavoredNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WALEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateWALEntryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicateWALEntryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollWALWriterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RollWALWriterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionLoadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRegionLoadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCompactionQueuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearCompactionQueuesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRegionBlockCacheRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearRegionBlockCacheResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteProcedureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteProceduresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecuteProceduresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlowLogResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlowLogResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearSlowLogResponseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearSlowLogResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenRegionRequest_RegionOpenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Admin_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFavoredNodesRequest_RegionUpdateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Admin_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Admin_proto_goTypes,
		DependencyIndexes: file_Admin_proto_depIdxs,
		EnumInfos:         file_Admin_proto_enumTypes,
		MessageInfos:      file_Admin_proto_msgTypes,
	}.Build()
	File_Admin_proto = out.File
	file_Admin_proto_rawDesc = nil
	file_Admin_proto_goTypes = nil
	file_Admin_proto_depIdxs = nil
}
